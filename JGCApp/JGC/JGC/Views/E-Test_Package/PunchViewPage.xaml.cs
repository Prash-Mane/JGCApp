using Acr.UserDialogs;
using JGC.Common.Extentions;
using JGC.Common.Helpers;
using JGC.Common.Interfaces;
using JGC.DataBase.DataTables;
using JGC.Models.E_Test_Package;
using JGC.UserControls.Touch;
using JGC.ViewModels.E_Test_Package;
using Plugin.Media;
using Plugin.Media.Abstractions;
using Plugin.Permissions;
using Plugin.Permissions.Abstractions;
using SkiaSharp;
using SkiaSharp.Views.Forms;
using SQLite;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Xamarin.Forms;
using Xamarin.Forms.Xaml;
using static JGC.Common.Enumerators.Enumerators;
using JGC.Common.Constants;

namespace JGC.Views
{
	[XamlCompilation(XamlCompilationOptions.Compile)]
	public partial class PunchViewPage : ContentPage 
    {
        //Drawing Canvas
        TouchManipulationBitmap bitmap;
        List<long> touchIds = new List<long>();
        Dictionary<long, SKPath> _inProgressPaths = new Dictionary<long, SKPath>();
        List<SKPath> _completedPaths = new List<SKPath>();
        MatrixDisplay matrixDisplay = new MatrixDisplay();
        SKBitmap SKBitmap;
        SKCanvas _saveBitmapCanvas;
        
        //image 1754x1239(WxH)
        string base64s = "";


        //Camera Canvas
        SKBitmap CameraBitmap = new SKBitmap();
        TouchManipulationBitmap Camerabitmap;
        List<long> CameratouchIds = new List<long>();
        Dictionary<long, SKPath> _inProgressCameraPaths = new Dictionary<long, SKPath>();
        List<SKPath> _completedCameraPaths = new List<SKPath>();
        SKCanvas _saveCameraBitmapCanvas;
        private byte[] imageAsByte = null;
        private string CameraPunchID;
        T_PunchImage SelectedImage;


        bool _drawNewPunch, _zoom, _draw;
        private string _filePath;
        public SpoolDrawingModel SelectedDrawing;
        T_TestLimitDrawing PDFDrawing;
        private ImageSource PDFImage;
        public SQLiteConnection conn;

        public PunchViewPage ()
		{ 
            InitializeComponent ();
            conn = DependencyService.Get<ISQLite>().GetConnection();
            CurrentPageHelper.IsDrawVisible = false;
            _zoom = true;
            EnableDisableDrawing.Text = "Disable Drawing";
        }



        //Canvas elementsTakePhotoAsync
        SKPaint paint = new SKPaint
        {
            Style = SKPaintStyle.StrokeAndFill,
            Color = SKColors.Red,
            StrokeWidth = 5,
            //PathEffect = SKPathEffect.Create1DPath(SKPath.ParseSvgPathData("M -25 -10 L 25 -10, 25 10, -25 10 Z"),
            //                          55, 0, SKPath1DPathEffectStyle.Morph)
        };
        SKPaint Camerapaint = new SKPaint
        {
            Style = SKPaintStyle.Stroke,
            Color = SKColors.Red,
            StrokeWidth = 5,
            //PathEffect = SKPathEffect.Create1DPath(SKPath.ParseSvgPathData("M -25 -10 L 25 -10, 25 10, -25 10 Z"),
            //                          55, 0, SKPath1DPathEffectStyle.Morph)
        };
        SKPoint ConvertToPixel(SKPoint pt)
        {
            if (Device.RuntimePlatform == Device.UWP)
            {
               float ScalingFactor = (float) Xamarin.Forms.Device.Info.ScalingFactor;
                pt = new SKPoint((float)(canvasView.CanvasSize.Width * pt.X / canvasView.Width) / ScalingFactor,
                             (float)(canvasView.CanvasSize.Height * pt.Y / canvasView.Height)/ ScalingFactor);          
              
            }
            return ResizePoints(pt);
        }
        SKPoint ResizePoints(SKPoint pt)
        {
            return new SKPoint((float)((pt.X + (bitmap.Matrix.TransX * -1))/ bitmap.Matrix.ScaleX),
                               (float)((pt.Y + (bitmap.Matrix.TransY * -1)))/ bitmap.Matrix.ScaleY); 
        }

        //camera 
        SKPoint ConvertToPixelforCamera(SKPoint pt)
        {
            if (Device.RuntimePlatform == Device.UWP)
            {
                pt = new SKPoint((float)(CameracanvasView.CanvasSize.Width * pt.X / CameracanvasView.Width),
                             (float)(CameracanvasView.CanvasSize.Height * pt.Y / CameracanvasView.Height));
            }
            return ResizeCameraPoints(pt);
        }
        SKPoint ResizeCameraPoints(SKPoint pt)
        {
            return new SKPoint((float)((pt.X + (Camerabitmap.Matrix.TransX * -1)) / Camerabitmap.Matrix.ScaleX),
                               (float)((pt.Y + (Camerabitmap.Matrix.TransY * -1))) / Camerabitmap.Matrix.ScaleY);
        }

        //Camera events
        #region Camera 
        private void TapGestureRecognizer_Camera(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            var obj = (Xamarin.Forms.TappedEventArgs)e;
            // if(viewModel._drawFinger)
            viewModel._drawFinger = true;
            var parameter = (PunchListModel)obj.Parameter;
            CameraPunchID = parameter.PunchID;
            GetPunchImages();
           
            viewModel.IsSaveVisible = false;
            viewModel.UpdateGrid("CaptureImage", parameter);
        }
        private void TapGestureRecognizer_Delete(object sender, EventArgs e)
        {
            var obj = (TappedEventArgs)e;
            var parameter = (PunchListModel)obj.Parameter;
            var viewModel = (PunchViewModel)BindingContext;
            viewModel.UpdateGrid("DeleteRow", parameter);
        }
        private void OnCameraCanvasViewPaintSurface(object sender, SKPaintSurfaceEventArgs args)
        {

            SKImageInfo info = args.Info;
            SKSurface surface = args.Surface;
            SKCanvas canvas = surface.Canvas;

            canvas.Clear();

            if (Camerabitmap != null)
            {
                
                //SKRect dest = new SKRect(0, 0, info.Width, info.Height);
                //BitmapStretch stretch = (BitmapStretch.UniformToFill);
                //BitmapAlignment horizontal = (BitmapAlignment.Start);
                //BitmapAlignment vertical = (BitmapAlignment.Start);
                //// Display the bitmap
                //Camerabitmap.Paint(canvas, dest, stretch, horizontal, vertical);

                Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;

                // Display the bitmap
                Camerabitmap.Paint(canvas);


            }
        }
        private void OnCameraTouchEffectAction(object sender, TouchActionEventArgs args)
        {
            var viewModel = (PunchViewModel)BindingContext;
            // Convert Xamarin.Forms point to pixels
            Point pt = args.Location;
            SKPoint Camerapoint = new SKPoint((float)(CameracanvasView.CanvasSize.Width * pt.X / CameracanvasView.Width),
                                              (float)(CameracanvasView.CanvasSize.Height * pt.Y / CameracanvasView.Height));

            if (Camerabitmap == null)
                return;

            if (viewModel._drawFinger)
            {
                switch (args.Type)
                {
                    case TouchActionType.Pressed:
                        if (!_inProgressCameraPaths.ContainsKey(args.Id))
                        {
                            SKPath path = new SKPath();
                            path.MoveTo(ConvertToPixelforCamera(Camerapoint));
                            _inProgressCameraPaths.Add(args.Id, path);
                        }
                        break;

                    case TouchActionType.Moved:
                        if (viewModel._drawFinger)
                        {
                            if (_inProgressCameraPaths.ContainsKey(args.Id))
                            {
                                SKPath path = _inProgressCameraPaths[args.Id];
                                path.LineTo(ConvertToPixelforCamera(Camerapoint));
                                CameraUpdateBitmap();
                            }
                        }
                        break;

                    case TouchActionType.Released:
                        if (_inProgressCameraPaths.ContainsKey(args.Id))
                        {
                            _completedCameraPaths.Add(_inProgressCameraPaths[args.Id]);
                            _inProgressCameraPaths.Remove(args.Id);
                            CameraUpdateBitmap();
                        }
                        break;
                    case TouchActionType.Cancelled:
                        if (viewModel._drawFinger)
                        {
                            if (_inProgressCameraPaths.ContainsKey(args.Id))
                            {
                                _inProgressCameraPaths.Remove(args.Id);
                                CameraUpdateBitmap();
                            }
                        }
                        break;
            }
            }
            else
            {
                switch (args.Type)
                {
                    case TouchActionType.Pressed:
                        if (Camerabitmap.HitTest(Camerapoint))
                        {
                            touchIds.Add(args.Id);
                            Camerabitmap.ProcessTouchEvent(args.Id, args.Type, Camerapoint);
                            break;
                        }
                        break;

                    case TouchActionType.Moved:
                        if (touchIds.Contains(args.Id))
                        {
                            Camerabitmap.ProcessTouchEvent(args.Id, args.Type, Camerapoint);
                            CameracanvasView.InvalidateSurface();
                        }
                        break;

                    case TouchActionType.Released:
                    case TouchActionType.Cancelled:
                        if (touchIds.Contains(args.Id))
                        {
                            Camerabitmap.ProcessTouchEvent(args.Id, args.Type, Camerapoint);
                            touchIds.Remove(args.Id);
                            CameracanvasView.InvalidateSurface();
                        }
                        break;
                }
            }
        }

        private void Clicked_EnableDisableDrawCamera(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            viewModel._drawFinger =!viewModel._drawFinger;
            if(viewModel._drawFinger)
                EnableDisableDrawing.Text = "Disable Drawing";
            else
                EnableDisableDrawing.Text = "Enable Drawing";
        }
        private async void CameraUpdateBitmap()
        {
            Camerapaint.Color = SKColor.Parse(CurrentPageHelper.ColorPicker !=null ? CurrentPageHelper.ColorPicker :"#000000");
            var viewModel = (PunchViewModel)BindingContext;
            if (viewModel == null) return;

            using (_saveCameraBitmapCanvas = new SKCanvas(CameraBitmap))
            {
                if (viewModel._drawFinger)
                {

                    foreach (SKPath path in _inProgressCameraPaths.Values)
                    {
                        _saveCameraBitmapCanvas.DrawPath(path, Camerapaint);
                    }
                }
            }
            CameracanvasView.InvalidateSurface();
        }
        private async void Cameraclick(object sender, EventArgs e)
        {

            if (((JGC.UserControls.CustomControls.CustomPicker)sender).SelectedItem == null) return;
            var mediaFile = await TakePhotoAsync("CapturedImage");
            UserDialogs.Instance.ShowLoading("Loading..!");
                if (_saveCameraBitmapCanvas != null)
                {
                _completedCameraPaths.Clear();
                _inProgressCameraPaths.Clear();
                CameraUpdateBitmap();
                CameracanvasView.InvalidateSurface();
                }
            //commented by gunjan on 07/11/19
            // var mediaFile = await TakePhotoAsync("CapturedImage");
            if (mediaFile == null)
                {
                    UserDialogs.Instance.HideLoading();
                    return;
                }
                _filePath = mediaFile.Path;
                using (Stream stream = mediaFile.GetStream())
                {
                CameraBitmap = SKBitmap.Decode(stream);
                    this.Camerabitmap = new TouchManipulationBitmap(CameraBitmap);
                    this.Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
                CameraUpdateBitmap();
                }
                IsVisible = true;
            var viewModel = (PunchViewModel)BindingContext;
           
                viewModel._drawFinger = false;

            viewModel.IsSaveVisible = viewModel.Showbuttons = true;

            EnableDisableDrawing.Text = "Disable Drawing";
            UserDialogs.Instance.HideLoading();
        }
        private async void Clicked_PickImage(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            try
            {
                UserDialogs.Instance.ShowLoading("Loading..!");
                if (_saveCameraBitmapCanvas != null)
                {
                    _completedCameraPaths.Clear();
                    _inProgressCameraPaths.Clear();
                    CameraUpdateBitmap();
                    CameracanvasView.InvalidateSurface();
                }
                var mediaFile = await PickFileAsync();
                if (mediaFile == null)
                {
                    UserDialogs.Instance.HideLoading();
                    return;
                }

                imageAsByte = ConvertMediaFileToByteArray(mediaFile);
                imageAsByte = await viewModel.ResizeImage(imageAsByte);
                TestPackageImage img = new PunchImage()
                {
                    DisplayName = Path.GetFileNameWithoutExtension(mediaFile.Path),
                    FileName = Path.GetFileName(mediaFile.Path),
                    Extension = Path.GetExtension(mediaFile.Path),
                    FileBytes = Convert.ToBase64String(imageAsByte),
                    PunchID = CameraPunchID,
                    FileSize = imageAsByte.Count(),
                };

                //imageAsByte = ConvertMediaFileToByteArray(mediaFile);

                if (img.FileBytes != null)
                {
                    bool insertImage = false;

                    var SQL = img.InsertQuery(Settings.ProjectID, CurrentPageHelper.ETestPackage.ID);
                    conn.Query<T_PunchImage>(SQL);
                    GetPunchImages();
                    ImageFiles.SelectedItem = ImageFiles.ItemsSource[ImageFiles.ItemsSource.Count - 1];
                    insertImage = true;

                    if (insertImage)
                    {
                        string SQLupdate = " UPDATE [T_ETestPackages] SET [Updated] = 1 WHERE [ProjectID] =  '" + Settings.ProjectID + "'"
                                   + " AND [ID] = '" + CurrentPageHelper.ETestPackage.ID + "'";
                        conn.Query<T_ETestPackages>(SQLupdate);

                        string SQLPunchList = " UPDATE [T_PunchList] SET [Updated] = 1 WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID] = '" + CurrentPageHelper.ETestPackage.ID + "'"
                                    + " AND [PunchID] = '" + CameraPunchID + "'";

                        conn.Query<T_PunchList>(SQLPunchList);

                        using (Stream stream = mediaFile.GetStream())
                        {
                            CameraBitmap = SKBitmap.Decode(stream);
                            this.Camerabitmap = new TouchManipulationBitmap(CameraBitmap);
                            this.Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
                            CameraUpdateBitmap();
                        }

                        // await Application.Current.MainPage.DisplayAlert("Image Save", "Saved Successfully", "OK");
                    }

                }


            }
            catch (Exception EX)
            {
                await Application.Current.MainPage.DisplayAlert(null, "Error saving image to database.", "OK");
            }
            IsVisible = true;
            //var viewModel = (PunchViewModel)BindingContext;
            viewModel.IsSaveVisible = viewModel._drawFinger = false;
            viewModel.Showbuttons = true;
            UserDialogs.Instance.HideLoading();
        }
        private void GetPunchImages()
        {
            string Sql = " SELECT * FROM [T_PunchImage] WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID]= '" + CurrentPageHelper.ETestPackage.ID + "'"
                                   + " AND [PunchID] = '" + CameraPunchID + "'";
            ImageFiles.ItemsSource = conn.Query<T_PunchImage>(Sql);                                 
        }
        public async Task<MediaFile> TakePhotoAsync(string pageName)
        {
            MediaFile file = null;
            var denied = await CheckPermissions();
            if (denied)
            {
                await Application.Current.MainPage.DisplayAlert("Unable to take photos.", "Permissions Denied. Please modify app permisions in settings.", "OK");

                return null;
            }
            //commented by gunjan on 07/11/19
            // MediaFile file = null;

            if (!CrossMedia.Current.IsCameraAvailable || !CrossMedia.Current.IsTakePhotoSupported)
            {
                await Application.Current.MainPage.DisplayAlert("No Camera", "No camera available!", "OK");
                return null;
            }
            
            try
            {
                if (pageName == "CapturedImage")
                {
                    file = await CrossMedia.Current.TakePhotoAsync(new StoreCameraMediaOptions
                    {
                        //SaveToAlbum = true,
                        Name = pageName,
                        Directory = "JGC",
                        // SaveMetaData = true
                    });
                }
                else
                {
                    file = await CrossMedia.Current.TakePhotoAsync(new StoreCameraMediaOptions
                    {
                        Name = pageName,
                    });
                }

            }
            catch (Exception ex)
            {

            }

            return file == null ? null : file;
        }
        public async Task<MediaFile> PickFileAsync()
        {
            var denied = await CheckPermissions();
            if (denied)
            {
                await Application.Current.MainPage.DisplayAlert("Unable to pick a file.", "Permissions Denied. Please modify app permisions in settings.", "OK");

                return null;
            }

            if (!CrossMedia.Current.IsPickPhotoSupported)
            {
                await Application.Current.MainPage.DisplayAlert("No Gallery", "Picking a photo is not supported.", "OK");
                return null;
            }

            var file = await CrossMedia.Current.PickPhotoAsync();
            return file == null ? null : file;
        }
        private async Task<bool> CheckPermissions()
        {
            var cameraStatus = await CrossPermissions.Current.CheckPermissionStatusAsync(Permission.Camera);
            var storageStatus = await CrossPermissions.Current.CheckPermissionStatusAsync(Permission.Storage);

            if (cameraStatus != PermissionStatus.Granted || storageStatus != PermissionStatus.Granted)
            {
                if (Device.RuntimePlatform == Device.Android)
                {
                    var results = await CrossPermissions.Current.RequestPermissionsAsync(new[] { Permission.Camera, Permission.Storage });
                    storageStatus = results[Permission.Storage];
                    cameraStatus = results[Permission.Camera];
                }
                else
                {
                    Device.BeginInvokeOnMainThread(async () =>
                    {
                        var results = await CrossPermissions.Current.RequestPermissionsAsync(new[] { Permission.Camera, Permission.Storage });
                        storageStatus = results[Permission.Storage];
                        cameraStatus = results[Permission.Camera];
                    });
                }
            }

            return cameraStatus != PermissionStatus.Granted && storageStatus != PermissionStatus.Granted;
        }
        private byte[] ConvertMediaFileToByteArray(MediaFile file)
        {
            using (var memoryStream = new MemoryStream())
            {
                file.GetStream().CopyTo(memoryStream);
                return memoryStream.ToArray();
            }
        }
        private async void Clicked_SaveCaptureImage(object sender, EventArgs e)
        {
            string newDisplayName = GetNewImageDisplayName();
            try
            {
                var viewModel = (PunchViewModel)BindingContext;
                using (SKImage image = SKImage.FromBitmap(CameraBitmap))
                {
                    if (image == null)
                        return;
                    SKData data = image.Encode();
                    data.Size.CompareTo(30);
                    imageAsByte = await viewModel.ResizeImage(data.ToArray());
                }

                TestPackageImage img = new PunchImage()
                {
                    DisplayName = newDisplayName,
                    FileName = newDisplayName + ".jpeg",
                    Extension = ".jpeg",
                    FileBytes = Convert.ToBase64String(imageAsByte),
                    PunchID = CameraPunchID,
                    FileSize = imageAsByte.Count(),
                };

                if (img.FileBytes != null)
                {
                    bool insertImage = false;

                    var SQL = img.InsertQuery(Settings.ProjectID, CurrentPageHelper.ETestPackage.ID);
                    conn.Query<T_PunchImage>(SQL);
                    GetPunchImages();                    
                    insertImage = true;

                    if (insertImage)
                    {
                        string SQLupdate = " UPDATE [T_ETestPackages] SET [Updated] = 1 WHERE [ProjectID] =  '" + Settings.ProjectID + "'"
                                   + " AND [ID] = '" + CurrentPageHelper.ETestPackage.ID + "'";
                        conn.Query<T_ETestPackages>(SQLupdate);

                        string SQLPunchList = " UPDATE [T_PunchList] SET [Updated] = 1 WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID] = '" + CurrentPageHelper.ETestPackage.ID + "'"
                                    + " AND [PunchID] = '" + CameraPunchID + "'";

                        conn.Query<T_PunchList>(SQLPunchList);

                        GetPunchImages();
                        ImageFiles.SelectedItem = ImageFiles.ItemsSource[ImageFiles.ItemsSource.Count - 1];
                        await Application.Current.MainPage.DisplayAlert("Image Save", "Saved Successfully", "OK");
                    }
                    else
                        await Application.Current.MainPage.DisplayAlert(null, "Error saving image to database.", "OK");
                }
                else
                    await Application.Current.MainPage.DisplayAlert(null, "Please select camera and take a picture to save", "OK");
               
                viewModel.IsSaveVisible = false;

            }
            catch (Exception ex)
            {

            }


        }
        private string GetNewImageDisplayName()
        {
            try
            { 
            var UserProject = conn.Query<T_UserProject>("Select * from T_UserProject where Project_ID = '" + Settings.ProjectID + "'");
            T_UserProject CurrentUserProject = UserProject.FirstOrDefault();
            DateTime CurrentUTC = DateTime.UtcNow;
            TimeZoneInfo ProjectTimeZone = TimeZoneInfo.FindSystemTimeZoneById(CurrentUserProject.TimeZone);
            CurrentUTC = TimeZoneInfo.ConvertTimeFromUtc(CurrentUTC, ProjectTimeZone);
            return CurrentUTC.ToString(AppConstant.CameraDateFormat);
            }
            catch (Exception e)
            {
                DateTime CurrentUTC = DateTime.UtcNow;
                TimeZoneInfo ProjectTimeZone = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");
                CurrentUTC = TimeZoneInfo.ConvertTimeFromUtc(CurrentUTC, ProjectTimeZone);
                return CurrentUTC.ToString(AppConstant.CameraDateFormat);
            }

        }
        private void PImage_SelectedIndexChanged(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            viewModel.Showbuttons = true;

            var x = (UserControls.CustomControls.CustomPicker)sender;
            SelectedImage = (T_PunchImage)x.SelectedItem;

            if (SelectedImage != null)
            {
                CameraBitmap = SKBitmap.Decode(Convert.FromBase64String(SelectedImage.FileBytes));
                this.Camerabitmap = new TouchManipulationBitmap(CameraBitmap);
                this.Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
                CameraUpdateBitmap();
                viewModel.IsSaveVisible = viewModel._drawFinger = false;
            }
            else
            {
                CameraBitmap = new SKBitmap();
                _saveCameraBitmapCanvas = new SKCanvas(CameraBitmap);
                this.Camerabitmap = new TouchManipulationBitmap(CameraBitmap);
                this.Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
                CameraUpdateBitmap();
            }

        }
        private async void Clicked_SaveImageName(object sender, EventArgs e)
        {
            if (!String.IsNullOrWhiteSpace(RenameEntry.Text))
            {
                if (RenameEntry.Text != SelectedImage.DisplayName)
                {
                    bool insertImage = false;
                    try
                    {
                        string renamesql = " UPDATE [T_PunchImage] SET [DisplayName] = '" + RenameEntry.Text.Trim() + "',[FileName] = '" + RenameEntry.Text.Trim() + SelectedImage.Extension + "' "
                                         + " WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID] ='" + CurrentPageHelper.ETestPackage.ID + "'"
                                         + " AND [PunchID] = '" + SelectedImage.PunchID + "' AND DisplayName = '" + SelectedImage.DisplayName + "'";
                        conn.Query<T_PunchImage>(renamesql);
                        GetPunchImages();
                        insertImage = true;
                    }
                    catch (Exception EX)
                    {
                        insertImage = false;
                    }

                    if (insertImage)
                    {
                        string SQL = " UPDATE [T_ETestPackages] SET [Updated] = 1 WHERE [ProjectID] =  '" + Settings.ProjectID + "'"
                                   + " AND [ID] = '" + CurrentPageHelper.ETestPackage.ID + "'";
                        conn.Query<T_ETestPackages>(SQL);

                        string SQLPunchList = " UPDATE [T_PunchList] SET [Updated] = 1 WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID] = '" + CurrentPageHelper.ETestPackage.ID + "'"
                                    + " AND [PunchID] = '" + CameraPunchID + "'";

                        conn.Query<T_PunchList>(SQLPunchList);

                        GetPunchImages();
                        await Application.Current.MainPage.DisplayAlert("Rename Image", "File has been renamed successfully", "OK");
                    }
                    else
                        await Application.Current.MainPage.DisplayAlert("Rename Image", "Error occurred renaming the image", "OK");
                }
                else
                    await Application.Current.MainPage.DisplayAlert("Rename Image", "Unable to rename this image as it already exists on VMLive", "OK");

                var viewModel = (PunchViewModel)BindingContext;
                viewModel.Showbuttons = true;

            }
        }
        private async void Clicked_Rename(object sender, EventArgs e)
        {
            if (SelectedImage != null)
            {
                var viewModel = (PunchViewModel)BindingContext;
                viewModel.Showbuttons = false;
                RenameEntry.Text = SelectedImage.DisplayName;
            }
            else
                await Application.Current.MainPage.DisplayAlert(null, "Please select image for rename", "OK");
        }

        private void clicked_CancleRename(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            viewModel.Showbuttons = true;
        }
        private async void Clicked_DeleteImage(object sender, EventArgs e)
        {
            if (SelectedImage != null)
            {
                bool result = await Application.Current.MainPage.DisplayActionSheet("Are you sure you want to delete this image?", null, null, "Yes", "No") == "Yes" ? true : false;
                if (result)
                {
                    try
                    {

                        Boolean deleted = false;

                        string deletesql = " DELETE FROM [T_PunchImage] WHERE [ProjectID] = '" + Settings.ProjectID + "' AND [ETestPackageID] = '" + CurrentPageHelper.ETestPackage.ID + "'"
                                         + " AND [PunchID] = '" + SelectedImage.PunchID + "' AND DisplayName = '" + SelectedImage.DisplayName + "'";
                        conn.Query<T_PunchImage>(deletesql);
                        GetPunchImages();
                        await Application.Current.MainPage.DisplayAlert("Delete Image", "File has been deleted successfully", "Ok");
                    }
                    catch (Exception ex)
                    {
                        await Application.Current.MainPage.DisplayAlert("Delete Image", "Error occurred deleting image", "Ok");
                    }
                }
            }
            else
                await Application.Current.MainPage.DisplayAlert(null, "Please select image for delete", "OK");
        }
        #endregion

        //Drawing Canvas
        #region drawing canvas
        private void TapGestureRecognizer_Tapped(object sender, EventArgs e)
        {           
            Drawpoints.IsVisible = _draw = false;
            _zoom = !_draw;

            _completedPaths.Clear();
            var args = (TappedEventArgs)e;
            string PunchLayer = args.Parameter.ToString();

            var viewModel = (PunchViewModel)BindingContext;
            viewModel.LoadPunchLayerImageAsync(PunchLayer);
            SelectedDrawing = CurrentPageHelper.SelectedDrawing;

            var Drawing = conn.Query<T_TestLimitDrawing>("SELECT * FROM [T_TestLimitDrawing]  WHERE [ID] ='" + SelectedDrawing.ID + "'");

            PDFDrawing = CurrentPageHelper.PDFDrawing = Drawing.FirstOrDefault();

            ReDrawAllPunch();
            CurrentPageHelper.IsDrawVisible = false;

            UpdateBitmap();
            canvasView.InvalidateSurface();

            //    RedrawingPunchLayer();
            //    //using (Graphics graphic = Graphics.FromImage(image))
            //    //{
            //    //    RedrawingPunchLayer(graphic, CurrentPageHelper.PunchCategories, CurrentPageHelper.ETestPackageID, CurrentPageHelper.CurrentDrawing.ID, CurrentPageHelper.CurrentLayer.ID);
            //    //}
            //}
        }      
        private void OnTouchEffectAction(object sender, TouchActionEventArgs args)
        {
            Point pt = args.Location;
            SKPoint point =
                new SKPoint((float)(canvasView.CanvasSize.Width * pt.X / canvasView.Width),
                            (float)(canvasView.CanvasSize.Height * pt.Y / canvasView.Height));

            if (bitmap == null)
                return;


            switch (args.Type)
            {

                case TouchActionType.Pressed:
                    if (_draw)
                    {
                        if (CurrentPageHelper.IsDrawVisible)
                        {
                            SKPath path = new SKPath();
                            path.MoveTo(ConvertToPixel(point));
                            _inProgressPaths.Clear();
                            _inProgressPaths.Add(args.Id, path);
                        }
                        break;
                    }
                    else
                    {
                        if (bitmap.HitTest(point))
                        {
                            touchIds.Add(args.Id);
                            bitmap.ProcessTouchEvent(args.Id, args.Type, point);
                            break;
                        }
                        break;
                    }
                case TouchActionType.Moved:
                    if (_zoom)
                    {
                        if (touchIds.Contains(args.Id))
                        {
                            bitmap.ProcessTouchEvent(args.Id, args.Type, point);
                            canvasView.InvalidateSurface();
                        }
                    }
                    break;
                case TouchActionType.Released:
                case TouchActionType.Cancelled:
                    if (_draw && CurrentPageHelper.IsDrawVisible)
                    {
                       if (_inProgressPaths.Count > 0)
                        {
                            try
                            {
                                _completedPaths.Add(_inProgressPaths[args.Id]);
                            }
                            catch{}

                                _inProgressPaths.Remove(args.Id);
                                UpdateBitmap();
                            }
                        canvasView.InvalidateSurface();
                        break;
                    }
                    else
                    {
                        if (touchIds.Contains(args.Id))
                        {
                            bitmap.ProcessTouchEvent(args.Id, args.Type, point);
                            touchIds.Remove(args.Id);
                            canvasView.InvalidateSurface();
                        }
                        break;
                    }
            }

        }
        private void OnCanvasViewPaintSurface(object sender, SKPaintSurfaceEventArgs args)
        {
            //SKImageInfo info = args.Info;
            //SKSurface surface = args.Surface;
            //SKCanvas canvas = surface.Canvas;

            //canvas.Clear();

            //if (bitmap != null)
            //{
            //    bitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
            //    // Display the bitmap
            //    bitmap.Paint(canvas);
                
            //    // Display the matrix in the lower-right corner
            //    SKSize matrixSize = matrixDisplay.Measure(bitmap.Matrix);

            //    matrixDisplay.Paint(canvas, bitmap.Matrix,
            //        new SKPoint(info.Width - matrixSize.Width,
            //                    info.Height - matrixSize.Height));
            //}

            SKImageInfo info = args.Info;
            SKSurface surface = args.Surface;
            SKCanvas canvas = surface.Canvas;

            canvas.Clear();

            if (bitmap != null)
            {

                bitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;

                // Display the bitmap
                bitmap.Paint(canvas);              

            }
        }
        private async void UpdateBitmap()
        {
            using (_saveBitmapCanvas = new SKCanvas(SKBitmap))
            {
                // image size 
                // canvas size
                // bit touch size

                if (CurrentPageHelper.IsDrawVisible && _completedPaths.Count > 0)
                {
                     SKPointMode pointMode = (SKPointMode.Lines);
                    _saveBitmapCanvas.DrawCircle(_completedPaths.Last().Points[0].X , _completedPaths.Last().Points[0].Y, 5, paint);

                }
                if (_drawNewPunch)
                {
                    if (_completedPaths.Count > 1)
                    {
                        for (int i = 0; i < _completedPaths.Count - 1; i++)
                        {
                            SKPoint[] point = new SKPoint[2];
                            point[0] = _completedPaths[i].LastPoint;
                            point[1] = _completedPaths[i + 1].LastPoint;

                            SKPointMode pointMode = (SKPointMode.Lines);
                            _saveBitmapCanvas.DrawPoints(pointMode, point, paint);
                        }
                        _drawNewPunch = !_drawNewPunch;
                        _completedPaths.Clear();
                    }
                    else
                    {
                        await Application.Current.MainPage.DisplayAlert("", "Required atleast two points for line", "OK");
                    }
                }
            }
            // canvasView.InvalidateSurface();

            if (_completedPaths.Count % 2 == 0 && _completedPaths.Count > 0)
            {

                var selectedAction = await Application.Current.MainPage.DisplayActionSheet("Do you want to confirm punch points? Or add additional points ?",
                                      "Cancel", null, "Confirm", "Add Additional Points");

                if (selectedAction == "Cancel")
                {
                    _completedPaths.Clear();
                    ReDrawAllPunch();
                    canvasView.InvalidateSurface();
                    UpdateBitmap();
                }
                else if (selectedAction == "Confirm")
                {
                    CurrentPageHelper.PathPoints = _completedPaths;
                    var viewModel = (PunchViewModel)BindingContext;
                    viewModel.LoadAddEditPunchTabsAsync("NewPunch");
                }

            }

        }
        private void TapGestureRecognizer_PopUp(object sender, EventArgs e)
        {
            var obj = (Xamarin.Forms.TappedEventArgs)e;
            var parameter = (PunchListModel)obj.Parameter;
            var viewModel = (PunchViewModel)BindingContext;
            viewModel.PopUp(parameter.PunchID);
        }        
        private async void ClickedOn_SaveNewPunch(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
           var isSaved = viewModel.SavePunch_Click();
            if (isSaved) 
            {
                await Task.Delay(2000);

                viewModel.PunchLayerGrid = viewModel.NewPunchGrid = false;
                viewModel.PDFGrid = true;

                ReDrawAllPunch();
                canvasView.InvalidateSurface();
                _completedPaths.Clear();
                Drawpoints.IsVisible = _draw = false;
            }
           
        }
        private void Enable_Functionality(object sender, EventArgs e)
        {
            var button = (Button)sender;
            var text = button.Text;
            _draw = _zoom = false;
            if (text == "Disable Drawing")
            {
                _zoom = true;
                Drawpoints.Text = "Enable Drawing";
            }                
            else
            {
                _draw = true;
                Drawpoints.Text = "Disable Drawing";
            }
               

        }
        private void ClickedOn_Cancel_SavePunch(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            if (viewModel.SelectedDrawing != null)
            {
                viewModel.SelectedPDF = viewModel.SelectedDrawing.DisplayName;
                CurrentPageHelper.SelectedDrawing = viewModel.SelectedDrawing;
                viewModel.PunchLayerGrid = viewModel.NewPunchGrid = false;
                viewModel.PDFGrid = true;
            }

            _completedPaths.Clear();
            ReDrawAllPunch();
            canvasView.InvalidateSurface();
            UpdateBitmap();
        }
        private void ClikedOn_NewPunch(object sender, EventArgs e)
        {
            if (_completedPaths.Count > 0)
            {
                _completedPaths.Clear();
                ReDrawAllPunch();
                canvasView.InvalidateSurface();
                UpdateBitmap();
            }

            var viewModel = (PunchViewModel)BindingContext;
            Drawpoints.IsVisible = _draw = true;
            _zoom = !_draw;
            Drawpoints.Text = "Disable Drawing";
            viewModel.CreateNewPunch_Click();
        }
        public void ReDrawAllPunch()
        {
            if (PDFDrawing != null)
            {
                byte[] Base64Stream = Convert.FromBase64String(PDFDrawing.FileBytes); //   base64s  PDFDrawing.FileBytes

                PDFImage = ImageSource.FromStream(() => new MemoryStream(Base64Stream));
                using (Stream stream = new MemoryStream(Base64Stream))
                {
                    SKBitmap = SKBitmap.Decode(stream);
                    this.bitmap = new TouchManipulationBitmap(SKBitmap);
                    this.bitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
                }

                RedrawingPunchLayer();

            }
        }

        private void ClickedOn_ClearImage(object sender, EventArgs e)
        {
            ImageFiles.SelectedItem = null;
            CameraBitmap = new SKBitmap();
            _saveCameraBitmapCanvas = new SKCanvas(CameraBitmap);
            this.Camerabitmap = new TouchManipulationBitmap(CameraBitmap);
            this.Camerabitmap.TouchManager.Mode = TouchManipulationMode.IsotropicScale;
            
            CameraUpdateBitmap();            
        }

        public async void RedrawingPunchLayer()
        {
          
            //graphic.SmoothingMode = SmoothingMode.AntiAlias;

            //string sqlquery = " SELECT [PunchID],[WorkConfirmed],[XPOS1],[YPOS1],[XPOS2],[YPOS2],[Category] FROM [T_PunchList] "
            //               + " WHERE [ETestPackageID] = '" + CurrentPageHelper.ETestPackage.ID + "' AND [VMHub_DocumentsID] = '" + CurrentPageHelper.CurrentDrawing.ID
            //               + "' AND [PunchAdminID] = '" + CurrentPageHelper.CurrentPunchOverview.PunchAdminID + "' "
            //               + " AND ([Cancelled] = 0 OR [Cancelled] IS NULL) AND [OnDocument] = 1 ORDER BY [CATEGORY] ASC";


            string sqlquery = " SELECT [PunchID],[WorkConfirmed],[XPOS1],[YPOS1],[XPOS2],[YPOS2],[Category] FROM [T_PunchList] "
                      + " WHERE [ProjectID] = '" + CurrentPageHelper.ETestPackage.ProjectID + "'" + " AND [ETestPackageID] ='" + CurrentPageHelper.ETestPackage.ID + "'"
                      + " AND [VMHub_DocumentsID] = '" + CurrentPageHelper.SelectedDrawing.ID + "'" + " AND [PunchAdminID] = '" + CurrentPageHelper.CurrentLayer.ID + "'"
                      + " AND ([Cancelled] = 0 OR [Cancelled] IS NULL) AND [OnDocument] = 1 ORDER BY [CATEGORY] ASC";

            var PunchList = conn.Query<T_PunchList>(sqlquery);

            List<T_PunchList> punches = new List<T_PunchList>();

            string previousCategory = "", hexColour = "#ffa500";

            foreach (T_PunchList PLitem in PunchList)
            {
                int xpos1 = PLitem.XPOS1;
                int ypos1 = PLitem.YPOS1;
                int xpos2 = PLitem.XPOS2;
                int ypos2 = PLitem.YPOS2;

                string punchID = PLitem.PunchID;
                Boolean workConfirmed = PLitem.WorkConfirmed;
                string category = PLitem.Category;

                if (category != previousCategory)
                {
                    if (CurrentPageHelper.PunchCategories != null && CurrentPageHelper.PunchCategories.Count > 0)
                    {
                        foreach (T_AdminPunchCategories value in CurrentPageHelper.PunchCategories)
                        {
                            if (value.Category == category)
                            {
                                if (!string.IsNullOrEmpty(value.ColourCode))
                                {
                                    hexColour = value.ColourCode;
                                    break;
                                }
                            }
                        }
                    }
                }

                previousCategory = category;

                DrawPunch(punchID, workConfirmed, hexColour, xpos1, ypos1, xpos2, ypos2);
            }
        }
        public void DrawPunch(string text, Boolean closed, string hexColour, int xpos1, int ypos1, int xpos2, int ypos2)
        {
            SKPaint Linepaint = new SKPaint
            {
                Style = SKPaintStyle.Stroke,
                Color = SKColor.Parse(hexColour),
                StrokeWidth = Device.RuntimePlatform == Device.UWP? 2 : 5,
                IsAntialias = true
                //PathEffect = SKPathEffect.Create1DPath(SKPath.ParseSvgPathData("M -25 -10 L 25 -10, 25 10, -25 10 Z"),
                //                          55, 0, SKPath1DPathEffectStyle.Morph)
            };

            SKPaint Textpaint = new SKPaint
            {
                Style = SKPaintStyle.Fill,
                Color = SKColor.Parse(hexColour),
                TextAlign = SKTextAlign.Center,
                Typeface = SKTypeface.FromFamilyName("Arial", SKTypefaceStyle.Bold),
                TextSize = Device.RuntimePlatform == Device.UWP ? 20.0f : 30.0f,
                IsAntialias = true,
            };
            SKPaint BlankRectpaint = new SKPaint()
            {
                Style = SKPaintStyle.StrokeAndFill,
                Color = SKColors.White,
                TextAlign = SKTextAlign.Center,
                IsAntialias = true,
                StrokeWidth = Device.RuntimePlatform == Device.UWP ? 2 : 5
            };
            SKPaint Rectpaint = new SKPaint()
            {
                Style = SKPaintStyle.Stroke,
                Color = SKColor.Parse(hexColour),
                TextAlign = SKTextAlign.Center,
                IsAntialias = true,
                StrokeWidth = Device.RuntimePlatform == Device.UWP ? 2 : 5
            };
            //arrow
            SKPaint PathPaint = new SKPaint
            {
                Color = SKColor.Parse(hexColour),
                StrokeWidth = Device.RuntimePlatform == Device.UWP ? 20 : 50,
                Style = SKPaintStyle.Fill,
            };

            using (_saveBitmapCanvas = new SKCanvas(SKBitmap))
            {
                SKRect textBounds = new SKRect();
                Textpaint.MeasureText(text, ref textBounds);
                float margin = Device.RuntimePlatform == Device.UWP ? 10 : 15;
                double angleDeg = Math.Round(Math.Atan2(ypos1 - ypos2, xpos1 - xpos2) * 180 / Math.PI);



                // Define the first arrow contour
                SKPath firstArrowPath = new SKPath();

                // center point
                float centerP = (float)Math.Sqrt(Math.Pow((xpos1 - xpos2), 2) + Math.Pow((ypos1 - ypos2), 2));
                float centerX = xpos1 + (margin * 2) * (xpos1 - xpos2) / centerP;
                float centerY = ypos1 + (margin * 2) * (ypos1 - ypos2) / centerP;

                firstArrowPath.MoveTo(centerX, centerY);

                SKPoint vector = new SKPoint(xpos1, ypos1) - new SKPoint(centerX, centerY);
                float length = (float)Math.Sqrt(Math.Pow(vector.X, 2) + Math.Pow(vector.Y, 2));
                vector.X /= length;
                vector.Y /= length;
                SKPoint rotate90 = new SKPoint(-vector.Y, vector.X);
                rotate90.X *= margin;
                rotate90.Y *= margin;

                //first point 
                firstArrowPath.LineTo(new SKPoint(xpos1, ypos1) + rotate90);
                //second point
                firstArrowPath.LineTo(new SKPoint(xpos1, ypos1) - rotate90);


                firstArrowPath.Close();

                int XRectToArrow = 0, YRectToArrow = 0;

                SKRect borderRect = SKRect.Create(new SKPoint(xpos2 - (textBounds.Size.Width + margin) / 2, ypos2 - textBounds.Size.Height - margin / 2),
                                                  new SKSize(textBounds.Size.Width + margin, textBounds.Size.Height + margin));
                if (ypos1 > ypos2)
                    YRectToArrow = (int)(borderRect.Height - margin) / 2;
                if (ypos1 < ypos2)
                    YRectToArrow = -(int)(borderRect.Height - margin / 2);

                if (angleDeg < 0)
                    angleDeg = 360 + (angleDeg);
                if (angleDeg < 45 || angleDeg > 315 || (angleDeg > 135 && angleDeg < 225))
                {
                    if (xpos1 > xpos2)
                        XRectToArrow = (int)(borderRect.Width / 2);
                    if (xpos1 < xpos2)
                        XRectToArrow = -(int)(borderRect.Width / 2);
                    YRectToArrow = -10;
                }

                _saveBitmapCanvas.DrawLine(new SKPoint(xpos1, ypos1), new SKPoint(xpos2 + XRectToArrow, ypos2 + YRectToArrow), Linepaint);
                _saveBitmapCanvas.DrawRect(borderRect, BlankRectpaint);
                _saveBitmapCanvas.DrawRect(borderRect, Rectpaint);
                _saveBitmapCanvas.DrawText(text, xpos2, ypos2, Textpaint);
                _saveBitmapCanvas.DrawPath(firstArrowPath, PathPaint);
            }


        }

        private void Button_ClickedSignPage(object sender, EventArgs e)
        {
            var obj = (Xamarin.Forms.Button)sender;
            var parameter = (PunchListModel)obj.CommandParameter;
            var viewModel = (PunchViewModel)BindingContext;
            viewModel.PopUp(parameter.PunchID);
        }

        private void TapGestureRecognizer_Tapped_PunchSelection(object sender, EventArgs e)
        {
            var viewModel = (PunchViewModel)BindingContext;
            var param = ((Xamarin.Forms.TappedEventArgs)e).Parameter;
            viewModel.SelectedDrawing = (SpoolDrawingModel)param;
            _zoom = true; 
            _draw = !_zoom;
            viewModel.GeneratePunchDataTable(viewModel.SelectedDrawing.ID);
        }

        private void TapGestureRecognizer_Tapped_1(object sender, EventArgs e)
        {

        }

        protected override void OnSizeAllocated(double width, double height)
        {
            base.OnSizeAllocated(width, height);
            height = height - (height / 4);
            if (width != canvasView.WidthRequest || height != canvasView.HeightRequest)
            {
                canvasView.WidthRequest = width;
                canvasView.HeightRequest = height;                
            }
            if (width != CameracanvasView.WidthRequest || height != CameracanvasView.HeightRequest)
            {
                 CameracanvasView.WidthRequest = width;
                 CameracanvasView.HeightRequest = height;
            }
        }
        #endregion

        protected override void OnDisappearing()
        {
            CurrentPageHelper.IsOnlyOverview = false;
            base.OnDisappearing();
        }
    }
}